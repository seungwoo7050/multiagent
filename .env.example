# .env.example
# 이 파일은 .env 파일에 설정할 수 있는 환경 변수들의 예시입니다.
# 실제 배포 시에는 이 파일의 복사본(.env)을 만들고 필요한 값을 채워 넣으세요.

# --- Application Settings ---
# 애플리케이션 환경 (development | production)
ENVIRONMENT=development
# 디버그 모드 활성화 (True | False)
DEBUG=False

# --- Logging Settings ---
# 로그 레벨 (DEBUG | INFO | WARNING | ERROR | CRITICAL)
LOG_LEVEL=INFO
# 로그 형식 (json | text)
LOG_FORMAT=json
# 로그 파일 저장 여부 (True | False)
LOG_TO_FILE=False
# 로그 파일 경로 (LOG_TO_FILE=True 일 때)
# LOG_FILE_PATH=./logs/app.log

# --- Worker Settings ---
# 워커 프로세스 수 (기본값: CPU 코어 수)
# WORKER_COUNT=4
# 최대 동시 작업 수
# MAX_CONCURRENT_TASKS=100

# --- Connection Settings ---
# 요청 타임아웃 (초)
REQUEST_TIMEOUT=30.0
# 성능 추적 활성화 (True | False)
ENABLE_PERFORMANCE_TRACKING=True

# --- Redis Settings ---
# Redis 연결 URL
REDIS_URL=redis://localhost:6379/0
# Redis 비밀번호 (없으면 비워둠)
# REDIS_PASSWORD=your_redis_password
# Redis 연결 풀 크기
# REDIS_CONNECTION_POOL_SIZE=20

# --- Memory Settings ---
# 메모리 TTL (초)
MEMORY_TTL=86400
# 캐시 TTL (초)
CACHE_TTL=3600

# --- LLM Settings ---
# 기본 LLM 모델
PRIMARY_LLM=gpt-3.5-turbo
# 대체(Fallback) LLM 모델
FALLBACK_LLM=gpt-3.5-turbo
# LLM 재시도 최대 횟수
# LLM_RETRY_MAX_ATTEMPTS=3
# LLM 재시도 백오프 요소
# LLM_RETRY_BACKOFF_FACTOR=0.5
# LLM 재시도 지터 사용 여부
# LLM_RETRY_JITTER=True

# 활성화된 모델 목록 (쉼표로 구분된 문자열 또는 JSON 리스트 문자열)
# ENABLED_MODELS_SET="gpt-3.5-turbo,gpt-4o,claude-3-opus"
# ENABLED_MODELS_SET='["gpt-3.5-turbo", "gpt-4o", "claude-3-opus"]'

# --- LLM Provider API Keys ---
# settings.py의 LLM_PROVIDERS_CONFIG 에서 API 키를 직접 설정하지 않은 경우,
# 아래 환경 변수를 통해 각 제공자의 API 키를 설정할 수 있습니다[cite: 1].
OPENAI_API_KEY=sk-xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
ANTHROPIC_API_KEY=sk-ant-api03-xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx-xxxxxxxxxxx
GEMINI_API_KEY=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx

# --- API Settings ---
# API 서버 호스트
API_HOST=localhost
# API 서버 포트
API_PORT=8000
# API 접두사
# API_PREFIX=/api/v1
# CORS 허용 오리진 (쉼표로 구분된 문자열 또는 JSON 리스트 문자열)
# CORS_ORIGINS="http://localhost:3000,https://example.com"
# CORS_ORIGINS='["http://localhost:3000", "https://example.com"]'
# 인증 요구 여부 (True | False)
AUTH_REQUIRED=False
# 인증 토큰 만료 시간 (초)
# AUTH_TOKEN_EXPIRY=86400

# --- Search API Settings ---
# Google Search API 키 [cite: 1]
GOOGLE_SEARCH_API_KEY=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# Google Search Engine ID [cite: 1]
GOOGLE_SEARCH_ENGINE_ID=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
# DuckDuckGo 프록시 API URL (필요시 변경)
DUCKDUCKGO_PROXY_API_URL=https://api.duckduckgo.com/
# 검색 결과 캐시 TTL (초)
SEARCH_CACHE_TTL=3600

# --- Metrics Settings ---
# 메트릭 수집 활성화 (True | False)
METRICS_ENABLED=True
# 메트릭 노출 포트
METRICS_PORT=9090

# --- Vector DB Settings ---
# 벡터 DB 종류 (chroma | qdrant | faiss | none) [cite: 1]
VECTOR_DB_TYPE=none
# 벡터 DB 연결 URL (VECTOR_DB_TYPE != 'none' 일 때) [cite: 1]
# VECTOR_DB_URL=http://localhost:6333 # 예시 (Qdrant)
# VECTOR_DB_URL=./chroma_db # 예시 (Chroma)